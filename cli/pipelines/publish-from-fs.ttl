@base <urn:pipeline:cube-creator> .
@prefix : <https://pipeline.described.at/> .
@prefix code: <https://code.described.at/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

<#Main> a :Pipeline ;
  :steps
    [
      :stepList
        ( <#loadCube> <#parse> <#countQuads> <#StreamOutput> ) ;
    ] .

<#countQuads>
  a :Step ;
  code:implementedBy
    [
      a code:EcmaScriptModule ;
      code:link <file:../lib/counters.mjs#quads>
    ] ;
  code:arguments ( "quads" ) ;
.

<#loadCube> a :Pipeline, :Readable ;
  :steps
    [
      :stepList
        (
          [
            a :Step ;
            code:implementedBy
              [
                a code:EcmaScriptModule ;
                code:link <node:fs#createReadStream>
              ] ;

            code:arguments ( "/Users/tplus/projects/zazuko/cube-creator/cli/output/transformed.nt" )
          ]
        )
    ] .

<#parse>
  a                  :Step ;
  code:implementedBy [ code:link <node:barnard59-formats/n3.js#parse> ;
                         a         code:EcmaScriptModule ] .

<#StreamOutput>
  a                  :Step ;
  code:implementedBy [ a         code:EcmaScriptModule ;
                         code:link <node:barnard59-graph-store/post.js#default> ] ;
  code:arguments     [ code:name  "endpoint" ;
                         code:value "PUBLISH_GRAPH_STORE_ENDPOINT"^^:VariableName ] ;
  code:arguments     [ code:name  "user" ;
                         code:value "PUBLISH_GRAPH_STORE_USER"^^:VariableName ] ;
  code:arguments     [ code:name  "password" ;
                         code:value "PUBLISH_GRAPH_STORE_PASSWORD"^^:VariableName ] ;
  code:arguments     [ code:name  "maxQuadsPerRequest" ;
                         code:value "Infinity"^^code:EcmaScript ] .
