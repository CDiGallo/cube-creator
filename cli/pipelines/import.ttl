@base <urn:pipeline:cube-creator> .
@prefix : <https://pipeline.described.at/> .
@prefix code: <https://code.described.at/> .

<#Main> a :Pipeline ;
        :steps
          [
            :stepList
              ( <#concatStreams> <#validate> <#streamOutputStep> ) ;
          ] .

<#concatStreams>
  a :Step ;
  code:implementedBy
    [
      a code:EcmaScript ;
      code:link <node:barnard59-base#concat.object>
    ] ;
  code:arguments
    (
      <#Observations>
      <#Dimensions>
      <#CubeMetadata>
    )
.

<#Observations>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadObservations> <#setGraph> ) ] .

<#Dimensions>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadDimensions> <#setMetadataCollectionGraph> ) ] .

<#CubeMetadata>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadCubeMetadata> <#setDatasetGraph> ) ] .

<#StreamOutput>
  a :Pipeline, :WritableObjectMode .

<#streamOutputStep>
  a :Step ;
  code:implementedBy [
                       code:link <file:../lib/pipeline#asStep> ;
                       a code:EcmaScript
                     ] ;
  code:arguments ( <#StreamOutput> ) .

<#loadObservations>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import#cubeQuery> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ]
.

<#loadDimensions>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import#dimensionMetadataQuery> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ],
    [
      code:name "metadataResource" ;
      code:value "metadataResource"^^:VariableName
    ]
.

<#loadCubeMetadata>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import#cubeMetadataQuery> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ],
    [
      code:name "datasetResource" ;
      code:value "datasetResource"^^:VariableName
    ]
.

<#setMetadataCollectionGraph>
  a                  :Step ;
  code:implementedBy [ a         code:EcmaScript ;
                       code:link <node:barnard59-base#setGraph> ] ;
  code:arguments     ( "metadataResource"^^:VariableName ) .

<#setDatasetGraph>
  a                  :Step ;
  code:implementedBy [ a         code:EcmaScript ;
                       code:link <node:barnard59-base#setGraph> ] ;
  code:arguments     ( "datasetResource"^^:VariableName ) .
